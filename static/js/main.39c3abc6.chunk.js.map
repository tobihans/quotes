{"version":3,"sources":["functions.js","App.js","reportWebVitals.js","index.js"],"names":["newQuote","a","instance","axios","create","baseURL","get","quote","console","log","_id","tags","content","author","authorSlug","length","fetched","randomColor","red","green","blue","Math","floor","random","library","add","fab","fas","App","props","renewQuote","bind","tweetUrl","state","undefined","color","result","this","setState","data","className","style","background","id","icon","target","rel","href","onClick","script","document","createElement","src","body","appendChild","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.39c3abc6.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport async function newQuote() {\n  const instance = axios.create({\n    baseURL: 'https://api.quotable.io/',\n  });\n  let quote;\n  try {\n    quote = await instance.get('random');\n   \n  }\n  catch (e) {\n    console.log(`Something went wrong when fetching new quote: ${e}`);\n    quote = {\n      _id:\"9rSuCtK9CCZk\",\n      tags:[\"famous-quotes\"],\n      content:\"Formula for success: under promise and over deliver.\",\n      author:\"Tom Peters\",\n      authorSlug:\"tom-peters\",\n      length:52,\n      fetched: false, // tells that this is the default quote\n    }\n  }\n  finally {\n  console.log(quote);\n    return quote;\n  }\n}\n\nexport function randomColor() {\n  let red, green, blue;\n  red = Math.floor(Math.random() * (190 - 100 + 1)) + 10;\n  green = Math.floor(Math.random() * (195 - 100 + 1)) + 100;\n  blue = Math.floor(Math.random() * (200 - 100 + 1)) + 100;\n  return `rgba(${red}, ${green}, ${blue}, ${Math.random() * (1 - 0.45) + 0.45})`;\n}\n","import React from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { newQuote, randomColor } from './functions';\nimport './App.css';\n\nlibrary.add(fab, fas);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renewQuote = this.renewQuote.bind(this);\n    this.tweetUrl = \"https://twitter.com/intent/tweet\";\n    this.state = {\n      quote: undefined,\n      color: randomColor(),\n    }\n  }\n\n    async renewQuote() {\n      let result = await newQuote();\n      this.setState({\n        quote: result.data,\n        color: randomColor(),\n      });\n      console.log(result.data);\n    }\n\n  render() {\n    return (\n      <div className=\"App\"\n        style={ \n          this.state.quote !== undefined \n          ? {background: this.state.color, color: this.state.color}\n          : {}\n        }\n      >\n        <header className=\"App-header\">\n        </header>\n        <div id=\"quote-box\">\n          <div id=\"text\">\n            <FontAwesomeIcon icon={['fas', 'quote-left']}/>\n            &nbsp;\n            {`  ${this.state.quote !== undefined ? this.state.quote.content : ''}  `}\n            {/* <FontAwesomeIcon icon={['fas', 'quote-right']}/> */}\n          </div>\n          <div id=\"author\">\n            {`- ${this.state.quote !== undefined ? this.state.quote.author : ''} `}\n          </div>\n          <div id=\"controls\">\n            <a id=\"tweet-quote\" target=\"_blank\" rel=\"noreferrer\"\n              href={\n                this.state.quote !== undefined\n                ? `${this.tweetUrl}?hashtags=quote&text=\"${this.state.quote.content}\"${this.state.quote.author}`\n                : '#'\n              }\n              style={\n                this.state.quote !== undefined \n                ? { background: this.state.color }\n                : {}\n              }\n            >\n              <FontAwesomeIcon icon={['fab', 'twitter']}/>\n            </a>\n            <button id=\"new-quote\" \n              style={\n                this.state.quote !== undefined \n                ? { background: this.state.color }\n                : {}\n              }\n              onClick={this.renewQuote}\n            >\n              New quote\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  componentDidMount() {\n    let script = document.createElement(\"script\");\n    script.src = \"https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js\";\n    document.body.appendChild(script);\n    this.renewQuote();\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}