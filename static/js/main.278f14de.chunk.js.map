{"version":3,"sources":["functions.js","App.js","reportWebVitals.js","index.js"],"names":["newQuote","a","instance","axios","create","baseURL","get","quote","console","log","_id","tags","content","author","authorSlug","length","fetched","randomColor","red","green","blue","Math","floor","random","library","add","fab","fas","App","props","renewQuote","bind","capture","tweetUrl","state","undefined","color","result","this","setState","data","document","getElementById","body","querySelectorAll","forEach","item","setAttribute","getBoundingClientRect","width","height","style","html2canvas","canvas","base64","toDataURL","Blob","type","downloadLink","createElement","href","click","alert","className","background","id","icon","target","rel","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.278f14de.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport async function newQuote() {\n  const instance = axios.create({\n    baseURL: 'https://api.quotable.io/',\n  });\n  let quote;\n  try {\n    quote = await instance.get('random');\n   \n  }\n  catch (e) {\n    console.log(`Something went wrong when fetching new quote: ${e}`);\n    quote = {\n      _id:\"9rSuCtK9CCZk\",\n      tags:[\"famous-quotes\"],\n      content:\"Formula for success: under promise and over deliver.\",\n      author:\"Tom Peters\",\n      authorSlug:\"tom-peters\",\n      length:52,\n      fetched: false, // tells that this is the default quote\n    }\n  }\n  finally {\n  console.log(quote);\n    return quote;\n  }\n}\n\nexport function randomColor() {\n  let red, green, blue;\n  red = Math.floor(Math.random() * (190 - 100 + 1)) + 10;\n  green = Math.floor(Math.random() * (195 - 100 + 1)) + 100;\n  blue = Math.floor(Math.random() * (200 - 100 + 1)) + 100;\n  return `rgba(${red}, ${green}, ${blue}, ${Math.random() * (1 - 0.45) + 0.45})`;\n}\n","import React from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport html2canvas from 'html2canvas';\nimport { newQuote, randomColor } from './functions';\nimport './App.css';\n\nlibrary.add(fab, fas);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renewQuote = this.renewQuote.bind(this);\n    this.capture = this.capture.bind(this);\n    this.tweetUrl = \"https://twitter.com/intent/tweet\";\n    this.state = {\n      quote: undefined,\n      color: randomColor(),\n    }\n  }\n\n  async renewQuote() {\n    let result = await newQuote();\n    this.setState({\n      quote: result.data,\n      color: randomColor(),\n    });\n    console.log(result.data);\n  }\n  \n  async capture() {\n    \n    try {\n      //console.log(\"Capturing...\", html2canvas)\n      let quote = document.getElementById('quote');\n      let svgs = document.body.querySelectorAll('svg');\n      svgs.forEach(function(item) {\n      item.setAttribute(\"width\", item.getBoundingClientRect().width);\n      item.setAttribute(\"height\", item.getBoundingClientRect().height);\n      item.style.width = null;\n      item.style.height= null;\n      });\n      let canvas = await html2canvas(quote);\n      let base64 = canvas.toDataURL(\"image/png\");\n      let blob = new Blob([base64], {type: 'image/png'});\n      let downloadLink = document.createElement('a');\n      downloadLink.setAttribute(\"download\", \"download\");\n      downloadLink.href = base64;\n      downloadLink.click();\n    }\n    catch(e) {\n      alert(\"Something went wrong!!\");\n      console.log(e);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\"\n        style={ \n          this.state.quote !== undefined \n          ? {background: this.state.color, color: this.state.color}\n          : {}\n        }\n      >\n        <header className=\"App-header\">\n        </header>\n        <div id=\"quote-box\">\n          <div id=\"quote\">\n            <div id=\"text\">\n              <FontAwesomeIcon icon={['fas', 'quote-left']}/>\n              \n              {`  ${this.state.quote !== undefined ? this.state.quote.content : ''}  `}\n              {/* <FontAwesomeIcon icon={['fas', 'quote-right']}/> */}\n            </div>\n            <div id=\"author\">\n              {`- ${this.state.quote !== undefined ? this.state.quote.author : ''} `}\n            </div>\n          </div>\n          <div id=\"controls\">\n            <span id=\"squares\">\n              <a id=\"tweet-quote\" target=\"_blank\" rel=\"noreferrer\"\n                href={\n                  this.state.quote !== undefined\n                  ? `${this.tweetUrl}?hashtags=quote&text=\"${this.state.quote.content}\"${this.state.quote.author}`\n                  : '#'\n                }\n                style={\n                  this.state.quote !== undefined \n                  ? { background: this.state.color }\n                  : {}\n                }\n              >\n                <FontAwesomeIcon icon={['fab', 'twitter']}/>\n              </a>\n              <button id=\"capture-quote\"\n                style={\n                  this.state.quote !== undefined \n                  ? { background: this.state.color }\n                  : {}\n                }\n                onClick={this.capture}\n              >\n                <FontAwesomeIcon icon={['fas', 'camera-retro']}/>\n              </button>\n            </span>\n            <button id=\"new-quote\" \n              style={\n                this.state.quote !== undefined \n                ? { background: this.state.color }\n                : {}\n              }\n              onClick={this.renewQuote}\n            >\n              New quote\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  componentDidMount() {\n    this.renewQuote();\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}